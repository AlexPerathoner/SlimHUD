name: Build and Analyze
on:
  push:
    branches: ["master", "develop"]
  pull_request:
    branches: ["master", "develop"]

jobs:
  # analyze:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Test
  #       run: |
  #         xcodebuild -workspace SlimHUD.xcworkspace -scheme SlimHUD -destination platform=macOS -resultBundlePath TestResults test
  #     - name: Create coverage
  #       id: code-coverage
  #       uses: kishikawakatsumi/xcresulttool@v1
  #       with:
  #         path: TestResults.xcresult
  #         show-code-coverage: true
  get-coverage-result:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        id: get-workflow
        with:
          script: |
            const workflowruns = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1,
            });
            return workflowruns.data
      - name: Get result 2
        run: echo "${{ toJson(steps.get-workflow.outputs.result) }}"
      # - uses: actions/github-script@v6
      #   id: get-workflow-id
      #   with:
      #     script: |
      #       const workflowruns = await github.rest.actions.listWorkflowRunsForRepo({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         per_page: 1,
      #       });
      #       return workflowruns.data.workflowruns[0].id
      # - name: Get result
      #   run: echo "${{ steps.get-workflow-id.outputs.result }}"
  update-comment:
    runs-on: ubuntu-latest
    steps:
      - uses: NejcZdovc/comment-pr@v2
        with:
          message: "Hello world 3"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}