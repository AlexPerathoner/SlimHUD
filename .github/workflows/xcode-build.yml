name: Build and Analyze
on:
  push:
    branches: ["master", "develop"]
  pull_request:
    branches: ["master", "develop"]

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  analyze:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: test
        run: |
          xcodebuild -workspace SlimHUD.xcworkspace -scheme SlimHUD -destination platform=macOS -resultBundlePath TestResults test
      - name: generate-coverage
        id: code-coverage
        uses: kishikawakatsumi/xcresulttool@v1
        with:
          path: TestResults.xcresult
          title: test-results
          upload-bundles: never
          show-code-coverage: true
  create-comment:
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - uses: actions/github-script@v6
        id: get-run
        with:
          script: |
            const jobs = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: github.run_id,
            });
            return jobs.data
            const check_id = jobs.data.jobs.filter(a => a.name == "test-results")[0].id
            const check_run = await github.rest.checks.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: check_id
            });
            const output = check_run.data.output
            const summary = output.summary
            const text = output.text
            return summary + "<br>---<br>" + text
      - name: Get result
        run: echo "${{ steps.get-run.outputs.result }}"
      - uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          message: ${{ steps.get-run.outputs.result }}