name: Build and Analyze
on:
  push:
    branches: ["master", "develop"]
  pull_request:
    branches: ["master", "develop"]

jobs:
  # analyze:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Test
  #       run: |
  #         xcodebuild -workspace SlimHUD.xcworkspace -scheme SlimHUD -destination platform=macOS -resultBundlePath TestResults test
  #     - name: Create coverage
  #       id: code-coverage
  #       uses: kishikawakatsumi/xcresulttool@v1
  #       with:
  #         path: TestResults.xcresult
  #         show-code-coverage: true
  write-comment:
#    if: ${{ github.event.issue.pull_request }}
# github.event.number # MR number
# github.event.after # commit
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/github-script@v6
      #   with:
      #     script: |
      #       github.rest.issues.createComment({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         issue_number: context.issue.number,
      #         body: 'Test'
      #       });
      - uses: NejcZdovc/comment-pr@v2
        with:
          message: "Hello world 2"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  # get-comment:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/github-script@v6
  #       id: set-result
  #       with:
  #       #listReviewComments
  #         script: |
  #           return github.rest.issues.listComments({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             issue_number: context.issue.number
  #           });
  #     - name: Get result
  #       run: echo "${{ steps.set-result.outputs.result }}"